use strict;

mkdir('reverse', 0777);

my @c = (
    (map {chr($_)} (0x20..0x7E, 0xA1..0xDF)),
);

my $script = "reverse\\reverse.pl";
open(SCRIPT,">$script") || die "Can't open file: $script\n";

#----------------------------------------------------------------------------
# reverse @_
#----------------------------------------------------------------------------

for my $c (
    [qw(ABCDE FGHIJ KLMNO )],
    [qw(‚ ‚¢‚¤‚¦‚¨ ‚©‚«‚­‚¯‚± ‚³‚µ‚·‚¹‚» )],
) {
    print SCRIPT "\@_ = (", "'", $c->[0], "','", $c->[1], "','", $c->[2], "'", "); print map {qq{(\$_)}} reverse \@_; print qq{\\n};\n";
}

#----------------------------------------------------------------------------
# reverse(@_)
#----------------------------------------------------------------------------

for my $c (
    [qw(ABCDE FGHIJ KLMNO )],
    [qw(‚ ‚¢‚¤‚¦‚¨ ‚©‚«‚­‚¯‚± ‚³‚µ‚·‚¹‚» )],
) {
    print SCRIPT "\@_ = (", "'", $c->[0], "','", $c->[1], "','", $c->[2], "'", "); print map {qq{(\$_)}} reverse(\@_); print qq{\\n};\n";
}

#----------------------------------------------------------------------------
# scalar reverse @_
#----------------------------------------------------------------------------

for my $c (
    [qw(ABCDE FGHIJ KLMNO )],
    [qw(‚ ‚¢‚¤‚¦‚¨ ‚©‚«‚­‚¯‚± ‚³‚µ‚·‚¹‚» )],
) {
    print SCRIPT "\@_ = (", "'", $c->[0], "','", $c->[1], "','", $c->[2], "'", "); print map {qq{(\$_)}} scalar reverse \@_; print qq{\\n};\n";
}

#----------------------------------------------------------------------------
# scalar reverse(@_)
#----------------------------------------------------------------------------

for my $c (
    [qw(ABCDE FGHIJ KLMNO )],
    [qw(‚ ‚¢‚¤‚¦‚¨ ‚©‚«‚­‚¯‚± ‚³‚µ‚·‚¹‚» )],
) {
    print SCRIPT "\@_ = (", "'", $c->[0], "','", $c->[1], "','", $c->[2], "'", "); print map {qq{(\$_)}} scalar reverse(\@_); print qq{\\n};\n";
}

close(SCRIPT);

#----------------------------------------------------------------------------
