=pod

=head1 NAME

Esjis - Run-time routines for esjis.pl

=head1 SYNOPSIS

  use Esjis;

    Esjis::split(...);
    Esjis::tr(...);
    Esjis::chop(...);
    Esjis::index(...);
    Esjis::rindex(...);
    Esjis::lc(...);
    Esjis::uc(...);
    Esjis::ignorecase(...);
    Esjis::chr(...);
    Esjis::ord(...);
    Esjis::reverse(...);

  # "no Esjis;" not supported

=head1 ABSTRACT

It output "use Esjis;" automatically when esjis.pl converts your script.
So you need not use this module directly.

=head1 NOT SCOPED

The module is a per script, not a per block lexical.  Only the last
C<use Esjis> matters, and it affects B<the whole script>.
And the C<no Esjis> is not supported and B<use Esjis> can appear as many
times as you want in a given script.
The multiple use of this module is discouraged.

By the same reason, the use this module inside modules is also
discouraged (though not as strongly discouraged as the case above.
See below).

If you still have to write a module with Esjis module, be very careful
of the load order.  See the codes below;

  # called module
  package Module_IN_BAR;
  use Esjis;
  # stuff ShiftJIS string here
  1;
  __END__

  # caller script
  use Module_IN_BAR;
  # surprise! use Esjis is in effect.
  __END__

The best way to avoid this oddity is to use this module RIGHT AFTER
other modules are loaded.  i.e.

  # called module
  package Module_IN_BAR;
  # no stuff ShiftJIS string here
  1;
  __END__

  # caller script
  use Module_IN_BAR;
  use Esjis;
  # stuff ShiftJIS string here
  __END__

=head1 BUGS AND LIMITATIONS

Please patches and report problems to author are welcome.

=head1 HISTORY

This Esjis module first appeared in ActivePerl Build 522 Built under
MSWin32 Compiled at Nov 2 1999 09:52:28

=head1 AUTHOR

INABA Hitoshi E<lt>ina@cpan.orgE<gt>

This project was originated by INABA Hitoshi.
For any questions, use E<lt>ina@cpan.orgE<gt> so we can share
this file.

=head1 LICENSE AND COPYRIGHT

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself. See L<perlartistic>.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

=head1 EXAMPLES

=over 4

=item Split string

  @split = Esjis::split(/fs/,$string,$limit);
  @split = Esjis::split(/fs/,$string);
  @split = Esjis::split(/fs/);
  @split = Esjis::split('',$string,$limit);
  @split = Esjis::split('',$string);
  @split = Esjis::split('');
  @split = Esjis::split;

=item Transliteration

  $tr = Esjis::tr($string,$searchlist,$replacementlist,$option);
  $tr = Esjis::tr($string,$searchlist,$replacementlist);

=item Chop string

  $chop = Esjis::chop(@list);
  $chop = Esjis::chop();

=item Index string

  $pos = Esjis::index($string,$substr,$position);
  $pos = Esjis::index($string,$substr);

=item Reverse index string

  $pos = Esjis::rindex($string,$substr,$position);
  $pos = Esjis::rindex($string,$substr);

=item Lower case string

  $lc = Esjis::lc($string);
  $lc = Esjis::lc();
  $lc = Esjis::lc;

=item Upper case string

  $uc = Esjis::uc($string);
  $uc = Esjis::uc();
  $uc = Esjis::uc;

=item Make ignore case string

  @ignorecase = Esjis::ignorecase(@string);

  This function is internal use to qq/ \L...\E / and qq/ \U...\E /.

=item Make character

  $chr = Esjis::chr($code);
  $chr = Esjis::chr();
  $chr = Esjis::chr;

=item Order of Character

  $ord = Esjis::ord($string);
  $ord = Esjis::ord();
  $ord = Esjis::ord;

=item Reverse list or string

  @reverse = Esjis::reverse(@list);
  $reverse = Esjis::reverse(@list);

=back

=cut

